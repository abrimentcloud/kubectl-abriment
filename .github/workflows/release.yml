name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., v1.0.0)"
        required: true
        type: string

env:
  BINARY_NAME: kubectl-abriment
  GO_VERSION: "1.21"

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            goos: linux
            goarch: amd64
          - os: darwin
            arch: amd64
            goos: darwin
            goarch: amd64
          - os: darwin
            arch: arm64
            goos: darwin
            goarch: arm64
          - os: windows
            arch: amd64
            goos: windows
            goarch: amd64
            ext: .exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          go build -ldflags "-X main.version=${{ steps.version.outputs.version }}" \
            -o dist/${{ env.BINARY_NAME }}${{ matrix.ext }} .

      - name: Create archive
        run: |
          cd dist
          if [ "${{ matrix.goos }}" = "windows" ]; then
            zip -r ../${{ env.BINARY_NAME }}_${{ steps.version.outputs.version }}_${{ matrix.os }}_${{ matrix.arch }}.zip .
          else
            tar -czf ../${{ env.BINARY_NAME }}_${{ steps.version.outputs.version }}_${{ matrix.os }}_${{ matrix.arch }}.tar.gz .
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BINARY_NAME }}_${{ steps.version.outputs.version }}_${{ matrix.os }}_${{ matrix.arch }}
          path: |
            ${{ env.BINARY_NAME }}_${{ steps.version.outputs.version }}_${{ matrix.os }}_${{ matrix.arch }}.tar.gz
            ${{ env.BINARY_NAME }}_${{ steps.version.outputs.version }}_${{ matrix.os }}_${{ matrix.arch }}.zip

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          find artifacts -name "*.tar.gz" -o -name "*.zip" | xargs -I {} cp {} release-assets/

      - name: Generate checksums
        run: |
          cd release-assets
          sha256sum * > checksums.txt

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          body_path: release-notes.md
          draft: false
          prerelease: false
          files: |
            release-assets/*
          token: ${{ secrets.GITHUB_TOKEN }}

  update-krew-manifest:
    name: Update Krew manifest
    runs-on: ubuntu-latest
    needs: release
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Download checksums
        run: |
          curl -L -o checksums.txt \
            "https://github.com/${{ github.repository }}/releases/download/${{ steps.version.outputs.version }}/checksums.txt"

      - name: Update Krew manifest
        run: |
          # Extract SHA256 checksums
          LINUX_SHA256=$(grep "kubectl-abriment_${{ steps.version.outputs.version }}_linux_amd64.tar.gz" checksums.txt | cut -d' ' -f1)
          DARWIN_AMD64_SHA256=$(grep "kubectl-abriment_${{ steps.version.outputs.version }}_darwin_amd64.tar.gz" checksums.txt | cut -d' ' -f1)
          DARWIN_ARM64_SHA256=$(grep "kubectl-abriment_${{ steps.version.outputs.version }}_darwin_arm64.tar.gz" checksums.txt | cut -d' ' -f1)
          WINDOWS_SHA256=$(grep "kubectl-abriment_${{ steps.version.outputs.version }}_windows_amd64.tar.gz" checksums.txt | cut -d' ' -f1)

          # Update abriment.yaml
          sed -i "s/version: v[0-9]\+\.[0-9]\+\.[0-9]\+/version: ${{ steps.version.outputs.version }}/" plugins/abriment.yaml
          sed -i "s|download/v[0-9]\+\.[0-9]\+\.[0-9]\+/|download/${{ steps.version.outputs.version }}/|g" plugins/abriment.yaml
          sed -i "s/kubectl-abriment_v[0-9]\+\.[0-9]\+\.[0-9]\+_/kubectl-abriment_${{ steps.version.outputs.version }}_/g" plugins/abriment.yaml

          # Update SHA256 values
          awk -v linux_sha="$LINUX_SHA256" -v darwin_amd64_sha="$DARWIN_AMD64_SHA256" -v darwin_arm64_sha="$DARWIN_ARM64_SHA256" -v windows_sha="$WINDOWS_SHA256" '
          /os: linux/ {in_linux=1}
          /os: darwin/ && /arch: amd64/ {in_darwin_amd64=1; in_linux=0}
          /os: darwin/ && /arch: arm64/ {in_darwin_arm64=1; in_darwin_amd64=0}
          /os: windows/ {in_windows=1; in_darwin_arm64=0}
          /sha256: TODO/ {
              if (in_linux) print "      sha256: " linux_sha
              else if (in_darwin_amd64) print "      sha256: " darwin_amd64_sha
              else if (in_darwin_arm64) print "      sha256: " darwin_arm64_sha
              else if (in_windows) print "      sha256: " windows_sha
              else print $0
              next
          }
          {print}
          ' plugins/abriment.yaml > plugins/abriment.yaml.tmp && mv plugins/abriment.yaml.tmp plugins/abriment.yaml
